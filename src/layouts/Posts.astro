---
import { Image } from "astro:assets";
import config from "@config/config.json";
import { getSinglePage } from "@lib/contentParser.astro";
//import dateFormat from "@lib/utils/dateFormat";
import { humanize, slugify } from "@lib/utils/textConverter";
import { BiCategoryAlt } from "react-icons/bi/index.js";

const authors = await getSinglePage("authors");
const { summary_length } = config.settings;

interface Props {
  className?: string;
  posts: any;
  fluid?: boolean;
}

const { className, posts, fluid } = Astro.props;
---

<div
  class={`text-center row gy-5 gx-4 ${className} ${
    posts.length == 1 ? "justify-center" : ""
  } `}
>
  {
    posts.map((post: any, i: number) => (
      <div
        class={`col-12 px-0 sm:px-4 ${
          i < 2 && fluid != false ? "sm:col-6" : "sm:col-6 md:col-4"
        } ${i > 4 && fluid != false ? "md:mt-12" : ""}
        `}
      >
        {post.data.image && (
          <a
            href={`${import.meta.env.BASE_URL}${post.slug}`}
            class="group block overflow-hidden hover:text-primary sm:rounded-lg"
          >
            <Image
              class={`max-h-44 w-full grayscale-[20%] transition duration-300 group-hover:scale-[1.03] ${
                i < 2 && fluid != false ? "sm:max-h-56" : "sm:max-h-36"
              } object-cover`}
              src={post.data.image}
              alt={post.data.title}
              width={i < 2 ? 650 : 325}  // 2n/3 * 1.3
              height={i < 2 ? 500 : 250}
            />
          </a>
        )}
        <ul class="mb-1 mt-3 flex flex-wrap items-center justify-center text-text dark:text-light">
          {/*<li class="mr-5">
            {authors
              .filter((author: any) =>
                post.data.authors
                  .map((author: string) => slugify(author))
                  .includes(slugify(author.data.title))
              )
              .map((author: any) => (
                <a
                  href={`${import.meta.env.BASE_URL}authors/${slugify(author.data.title)}`}
                  class="flex items-center font-medium hover:text-primary"
                >
                  {authorImages[author.data.image] && (
                    <Image
                      src={authorImages[author.data.image]()}
                      alt={author.data.title}
                      height={50}
                      width={50}
                      class="mr-2 h-6 w-6 rounded-full"
                    />
                  )}
                  <BiUser className="mr-1 h-[18px] w-[18px]" />
                  <span>{author.data.title}</span>
                </a>
              ))}
          </li>*/}
          {/* <li class="mr-5 flex flex-wrap items-center font-medium">
            <BiCalendarEdit className="mr-1 h-5 w-5" />
            <>{dateFormat(post.data.date)}</>
          </li>*/}
          <li class="flex flex-wrap items-center">
            <BiCategoryAlt className="h-[18px] w-[18px] pr-1" />
            <>
              <ul>
                {post.data.categories.map((category: string, i: number) => (
                  <li class="inline-block">
                    <a
                      href={`${import.meta.env.BASE_URL}categories/${slugify(
                        category
                      )}`}
                      class="mr-1 font-light hover:text-primary"
                    >
                      {humanize(category)}{i !== post.data.categories.length - 1 && ","}
                    </a>
                  </li>
                ))}
              </ul>
            </>
          </li>
        </ul>
        <h3 class={`mb-1 text-xl ${i < 2 || fluid === false ? "md:text-2xl" : ""}`}>
          <a
            href={`${import.meta.env.BASE_URL}${post.slug}`}
            class="block px-2 hover:text-primary"
          >
            {post.data.title}
          </a>
        </h3>
        <p class="px-2 text-text dark:text-light font-light">
          {post.data.description
            ? post.data.description
            : post.body?.slice(
                0,
                Number(i < 2 && fluid != false ? summary_length * 2 : summary_length)
              ) + "..."}
        </p>
      </div>
    ))
  }
</div>
